ext {
    kotlinStdLibVersion = '1.6.21'
    appCompatVersion = '1.3.0'
    constraintLayoutVersion = '2.0.4'
    daggerHiltVersion = '2.41'
    androidArchVersion = '1.1.1'
    materialVersion = '1.3.0'
    coreKtxVersion = '1.7.0'
    coroutinesVersion = '1.6.1'
    navVersion = '2.4.2'
    fragmentKtxVersion = '1.4.1'
    glideVersion = '4.12.0'
    supportVersion = '28.0.0'
    lifecycleVersion = '2.4.1'
    retrofitVersion = '2.8.1'
    gsonVersion = '2.8.5'
    okHttpVersion = '3.14.0'
    jUnitVersion = '4.13'
    androidTestCoreVersion = '1.3.0'
    archCoreVersion = '2.1.0'
    mockitoVersion = '3.10.0'
    mockkVersion = '1.11.0'
    roomVersion = '2.3.0'
    biometricVersion = "1.2.0-alpha04"

    debugBaseUrl = "\"https://api.tvmaze.com/\""
    releaseBaseUrl = "\"https://api.tvmaze.com/\""

    dependencies = [
            //kotlin
            kotlinStdlib            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinStdLibVersion",
            coroutines              : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion",
            //app
            appCompat               : "androidx.appcompat:appcompat:$appCompatVersion",
            constraintLayout        : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            material                : "com.google.android.material:material:$materialVersion",
            coreKtx                 : "androidx.core:core-ktx:$coreKtxVersion",
            //Jetpack
            lifecycleViewModelKtx   : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            lifecycleLiveDataKtx    : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
            navigationFragmentKtx   : "androidx.navigation:navigation-fragment-ktx:$navVersion",
            navigationUiKtx         : "androidx.navigation:navigation-ui-ktx:$navVersion",
            fragmentKtx             : "androidx.fragment:fragment-ktx:$fragmentKtxVersion",
            //room
            room                    : "androidx.room:room-runtime:$roomVersion",
            roomKapt                : "androidx.room:room-compiler:$roomVersion",
            // Dagger
            daggerHilt              : "com.google.dagger:hilt-android:$daggerHiltVersion",
            daggerHiltCompiler      : "com.google.dagger:hilt-compiler:$daggerHiltVersion",
            //Glide
            glide                   : "com.github.bumptech.glide:glide:$glideVersion",
            glideCompiler           : "com.github.bumptech.glide:compiler:$glideVersion",
            //parse
            gson                    : "com.google.code.gson:gson:$gsonVersion",
            //Retrofit
            retrofit                : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitConverter       : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            retrofitJacksonConverter: "com.squareup.retrofit2:converter-jackson:$retrofitVersion",
            retrofitScalarsConverter: "com.squareup.retrofit2:converter-scalars:$retrofitVersion",
            //OkHttp
            okHttp                  : "com.squareup.okhttp3:okhttp:$okHttpVersion",
            okHttpLog               : "com.squareup.okhttp3:logging-interceptor:$okHttpVersion",
            //Biometric
            biometric               : "androidx.biometric:biometric-ktx:$biometricVersion"
    ]

    testDependencies = [
            // Test
            jUnit          : "junit:junit:$jUnitVersion",
            coreTesting    : "androidx.arch.core:core-testing:$archCoreVersion",
            androidTestCore: "androidx.test:core:$androidTestCoreVersion",
            mockito        : "org.mockito:mockito-core:$mockitoVersion",
            mockk          : "io.mockk:mockk:$mockkVersion",
            coroutinesCore : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
    ]

    appImplDependencies = [
            dependencies.appCompat,
            dependencies.constraintLayout,
            dependencies.daggerHilt,
            dependencies.navigationUiKtx,
            dependencies.navigationFragmentKtx,
            dependencies.biometric,
    ]

    featuresDependencies = [
            dependencies.appCompat,
            dependencies.constraintLayout,
            dependencies.fragmentKtx,
            dependencies.material,
            dependencies.daggerHilt,
            dependencies.navigationFragmentKtx,
            dependencies.navigationUiKtx,
    ]

    appTestDependencies = [
            testDependencies.jUnit,
            testDependencies.coreTesting,
            testDependencies.androidTestCore,
            testDependencies.mockito,
            testDependencies.mockk,
            testDependencies.coroutinesCore,
    ]

    kaptDependencies = [
            dependencies.daggerHiltCompiler,
            dependencies.roomKapt,
    ]

    appAnnotationProcessorDependencies = [
            dependencies.glideCompiler,
    ]

    kotlinDependencies = [
            dependencies.kotlinStdlib,
            dependencies.coroutines,
    ]

    dataDependencies = [
            dependencies.daggerHilt,
            dependencies.gson,
            dependencies.retrofit,
            dependencies.room,
    ]

    coreDependencies = [
            dependencies.daggerHilt,
            dependencies.room,
            dependencies.retrofitConverter,
            dependencies.retrofitJacksonConverter,
            dependencies.retrofitScalarsConverter,
            dependencies.okHttpLog,
    ]

    uiCommonDependencies = [
            dependencies.material,
            dependencies.glide,
            dependencies.coreKtx,
    ]

    presentationDependencies = [
            dependencies.lifecycleViewModelKtx,
            dependencies.lifecycleLiveDataKtx,
            dependencies.daggerHilt,
    ]

}
